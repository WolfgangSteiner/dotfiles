# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/cdd62401-a3a4-418d-89f3-33902c62c2dc";
      fsType = "btrfs";
      options = [ "subvol=root" "compress=zstd" "noatime"];
    };

  boot.initrd.luks.devices."enc".device = "/dev/disk/by-uuid/28aa6bc4-8ca6-44c5-99b3-d7d8016b173e";

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/cdd62401-a3a4-418d-89f3-33902c62c2dc";
      fsType = "btrfs";
      options = [ "subvol=home" "compress=zstd" "noatime"];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/cdd62401-a3a4-418d-89f3-33902c62c2dc";
      fsType = "btrfs";
      options = [ "subvol=nix" "compress=zstd" "noatime"];
    };

  fileSystems."/persist" =
    { device = "/dev/disk/by-uuid/cdd62401-a3a4-418d-89f3-33902c62c2dc";
      fsType = "btrfs";
      options = [ "subvol=persist" "compress=zstd" "noatime"];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/cdd62401-a3a4-418d-89f3-33902c62c2dc";
      fsType = "btrfs";
      options = [ "subvol=log" "compress=zstd" "noatime"];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/092B-F1C3";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/a598cae8-cc56-4467-8149-c056ab3b2afe"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp59s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
